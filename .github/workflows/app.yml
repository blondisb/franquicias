name: Build and Deploy to AWS Lightsail

on:
  push:
    branches: [ dev ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: blondis-prueba-tecnica
        IMAGE_TAG: latest
      run: |

        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .

        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Deploy to AWS Lightsail
      run: |
        aws lightsail create-container-service-deployment \
          --service-name prueba-blondis-service \
          --containers '{
            "prueba-blondis": {
              "image": "${{ steps.login-ecr.outputs.registry }}/blondis-prueba-tecnica:latest",
              "environment": {
                "DB_HOST": "${{ secrets.DB_HOST }}",
                "DB_PORT": "3306",
                "DB_NAME": "appdb", 
                "DB_USER": "blondisbarrios",
                "DB_PASSWORD": "${{ secrets.DB_PASSWORD }}"
              },
              "ports": {
                "4000": "HTTPS"
              }
            }
          }' \
          --public-endpoint '{
            "containerName": "prueba-blondis",
            "containerPort": 4000
          }'